<?php
// $Id$

/**
 * @file
 * Add button to publish or unpublish a node,
 * with access control based on the node type
 */

/**
 * Implementation of hook_menu().
 */
function publishcontent_menu() {
  $items = array();
  $items['node/%node/publish'] = array(
    'title' => 'Publish',
    'page callback' => 'publishcontent_toggle_status',
    'page arguments' => array(1),
    'access callback' => '_publishcontent_access',
    'access arguments' => array(1, 'publish'),
    'weight' => 5,
    'type' => MENU_LOCAL_TASK,
  );
  $items['node/%node/unpublish'] = array(
    'title' => 'Unpublish',
    'page callback' => 'publishcontent_toggle_status',
    'page arguments' => array(1),
    'access callback' => '_publishcontent_access',
    'access arguments' => array(1, 'unpublish'),
    'weight' => 5,
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

function publishcontent_menu_alter(&$callbacks) {
  $callbacks['node/%node']['access callback'] = '_publishcontent_view_access';
  $callbacks['node/%node']['access arguments'] = array(1);
}

function _publishcontent_view_access($node) {
  return user_access('un/publish '. check_plain($node->type) .' content') ||
         user_access('un/publish *all* content') ||
         node_access('view', $node);
}

function _publishcontent_access($node, $op) {
  return (($node->status == 0 && $op == 'publish') || 
          ($node->status == 1 && $op == 'unpublish'))
      && (user_access('un/publish '. check_plain($node->type) .' content') ||
          user_access('un/publish *all* content'));
}

/**
 * Implementation of hook_perm().
 */
function publishcontent_perm() {
  $perms = array('un/publish *all* content');

  foreach (node_get_types() as $type) {
    if ($type->module == 'node') {
      $perms[] = 'un/publish '. check_plain($type->type) .' content';
    }
  }
  return $perms;
}

function _publishcontent_get_message($nid, $title, $status) {
  return t($status ? '"@title" [@nid] has been published'
                         : '"@title" [@nid] has been unpublished',
           array('@title' => $title, '@nid' => $nid));
}
/**
 * @param $node a node object
 */
function publishcontent_toggle_status($node) {
  $node->status = !$node->status;
  node_save($node);
  drupal_set_message(_publishcontent_get_message($node->nid, $node->title, $node->status));
  drupal_goto('node/'. $node->nid);
}
